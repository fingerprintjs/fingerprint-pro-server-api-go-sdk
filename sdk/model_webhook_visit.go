/*
 * Fingerprint Pro Server API
 *
 * Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. It can be used for data exports, decision-making, and data analysis scenarios. Server API is intended for server-side usage, it's not intended to be used from the client side, whether it's a browser or a mobile device.
 *
 * API version: 3
 * Contact: support@fingerprint.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package sdk

import (
	"time"
)

type WebhookVisit struct {
	VisitorId      string               `json:"visitorId"`
	ClientReferrer string               `json:"clientReferrer,omitempty"`
	UserAgent      string               `json:"userAgent,omitempty"`
	Bot            *BotdDetectionResult `json:"bot,omitempty"`
	IpInfo         *IpInfoResult        `json:"ipInfo,omitempty"`
	// Flag if user used incognito session.
	Incognito           bool                    `json:"incognito"`
	RootApps            *RootAppsResult         `json:"rootApps,omitempty"`
	Emulator            *EmulatorResult         `json:"emulator,omitempty"`
	ClonedApp           *ClonedAppResult        `json:"clonedApp,omitempty"`
	FactoryReset        *FactoryResetResult     `json:"factoryReset,omitempty"`
	Jailbroken          *JailbrokenResult       `json:"jailbroken,omitempty"`
	Frida               *FridaResult            `json:"frida,omitempty"`
	IpBlocklist         *IpBlockListResult      `json:"ipBlocklist,omitempty"`
	Tor                 *TorResult              `json:"tor,omitempty"`
	PrivacySettings     *PrivacySettingsResult  `json:"privacySettings,omitempty"`
	VirtualMachine      *VirtualMachineResult   `json:"virtualMachine,omitempty"`
	Vpn                 *VpnResult              `json:"vpn,omitempty"`
	Proxy               *ProxyResult            `json:"proxy,omitempty"`
	Tampering           *TamperingResult        `json:"tampering,omitempty"`
	RawDeviceAttributes *map[string]interface{} `json:"rawDeviceAttributes,omitempty"`
	HighActivity        *HighActivityResult     `json:"highActivity,omitempty"`
	LocationSpoofing    *LocationSpoofingResult `json:"locationSpoofing,omitempty"`
	SuspectScore        *SuspectScoreResult     `json:"suspectScore,omitempty"`
	RemoteControl       *RemoteControlResult    `json:"remoteControl,omitempty"`
	Velocity            *VelocityResult         `json:"velocity,omitempty"`
	DeveloperTools      *DeveloperToolsResult   `json:"developerTools,omitempty"`
	// Unique identifier of the user's identification request.
	RequestId      string                `json:"requestId"`
	BrowserDetails *BrowserDetails       `json:"browserDetails"`
	Ip             string                `json:"ip"`
	IpLocation     *DeprecatedIpLocation `json:"ipLocation,omitempty"`
	// Timestamp of the event with millisecond precision in Unix time.
	Timestamp int64 `json:"timestamp"`
	// Time expressed according to ISO 8601 in UTC format.
	Time *time.Time `json:"time"`
	// Page URL from which the identification request was sent.
	Url string `json:"url"`
	// A customer-provided value or an object that was sent with identification request.
	Tag ModelMap `json:"tag,omitempty"`
	// A customer-provided id that was sent with identification request.
	LinkedId   string      `json:"linkedId,omitempty"`
	Confidence *Confidence `json:"confidence,omitempty"`
	// Attribute represents if a visitor had been identified before.
	VisitorFound bool    `json:"visitorFound"`
	FirstSeenAt  *SeenAt `json:"firstSeenAt"`
	LastSeenAt   *SeenAt `json:"lastSeenAt"`
}
